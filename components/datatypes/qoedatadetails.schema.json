{
  "meta:license": [
    "Copyright 2022 Adobe Systems Incorporated. All rights reserved.",
    "This work is licensed under a Creative Commons Attribution 4.0 International (CC BY 4.0) license",
    "you may not use this file except in compliance with the License. You may obtain a copy",
    "of the License at https://creativecommons.org/licenses/by/4.0/"
  ],
  "$id": "https://ns.adobe.com/xdm/datatypes/qoeDataDetails",
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "Qoe Data details information",
  "type": "object",
  "meta:status": "experimental",
  "meta:extensible": true,
  "description": "Qoe Data details information.",
  "definitions": {
    "qoeDataDetails": {
      "properties": {
        "xdm:bitrateAverageBucket": {
          "title": "Average Bitrate Bucket",
          "type": "integer",
          "description": "The average bitrate (in kbps). The value is predefined buckets at 100kbps intervals. The Average Bitrate is computed as a weighted average of all bitrate values related to the play duration that occurred during a playback session."
        },
        "xdm:bitrate": {
          "title": "Bitrate",
          "type": "integer",
          "description": "The bitrate value (in kbps)."
        },
        "xdm:bitrateAverage": {
          "title": "Average Bitrate",
          "type": "number",
          "description": "The average bitrate (in kbps, integer). This metric is computed as a weighted average of all bitrate values related to the play duration that occurred during a playback session."
        },
        "xdm:hasBitrateChangeImpactedStreams": {
          "title": "Bitrate Change Impacted Streams",
          "type": "boolean",
          "description": "The number of streams in which bitrate changes occurred. This metric is set to true only if at least one bitrate change event occurred during a playback session."
        },
        "xdm:bitrateChangeCount": {
          "title": "Bitrate Changes",
          "type": "integer",
          "description": "The number of bitrate changes. This value is computed as a sum of all bitrate change events that occurred during a playback session."
        },
        "xdm:hasDroppedFrameImpactedStreams": {
          "title": "Dropped Frame Impacted Streams",
          "type": "boolean",
          "description": "The number of streams in which frames were dropped. This metric is set to true only if at least one frame was dropped during a playback session."
        },
        "xdm:droppedFrames": {
          "title": "Dropped Frames",
          "type": "integer",
          "description": "The number of frames dropped during playback of the main content."
        },
        "xdm:isDroppedBeforeStart": {
          "title": "Drops Before Starts",
          "type": "boolean",
          "description": "The number of times a user quit the video before its start. This metric is set to true only if no content was rendered, regardless of ads."
        },
        "xdm:framesPerSecond": {
          "title": "Frames Per Second",
          "type": "integer",
          "description": "The current value of the stream frame-rate (in frames per second). The field is mapped to the fps field on the close call and can be accessed through processing rules."
        },
        "xdm:timeToStart": {
          "title": "Time To Start",
          "type": "integer",
          "description": "Describes the duration (in seconds) passed between video load and start."
        },
        "xdm:hasBufferImpactedStreams": {
          "title": "Buffer Impacted Streams",
          "type": "boolean",
          "description": "The number of streams impacted by buffering. This metric is set to true only if at least one buffer event occurred during a playback session."
        },
        "xdm:bufferCount": {
          "title": "Buffer Events",
          "type": "integer",
          "description": "The number of buffer events. This metric is computed as a count of the different buffer states that occurred during a playback session. This is a count of how many times the player enters a buffer state from other states, e.g., playing or pausing."
        },
        "xdm:bufferTime": {
          "title": "Total Buffer Duration",
          "type": "integer",
          "description": "The total amount of time, in seconds, spent buffering. This value is computed as a sum of all buffer events durations that occurred during a playback session."
        },
        "xdm:hasErrorImpactedStreams": {
          "title": "Error Impacted Streams",
          "type": "boolean",
          "description": "The number of streams in which an error event occurred (i.e., trackError was called during the playback session, and a type=error heartbeat call was generated). This metric is set to true only if at least one error occurred during playback."
        },
        "xdm:errorCount": {
          "title": "Errors",
          "type": "integer",
          "description": "The number of errors that occurred (Integer). This value is computed as a sum of all error events that occurred during a playback session."
        },
        "xdm:hasStallImpactedStreams": {
          "title": "Stalling Impacted Streams",
          "type": "boolean",
          "description": "The number of streams in which a stalled event occurred. This metric is set to true only if at least one stall occurred during playback."
        },
        "xdm:stallCount": {
          "title": "Stalling Events",
          "type": "integer",
          "description": "The number of times the playback was stalled during a playback session."
        },
        "xdm:stallTime": {
          "title": "Total Stalling Duration",
          "type": "integer",
          "description": "The total time (seconds; integer) the playback was stalled during a playback session."
        },
        "xdm:playerSdkErrors": {
          "title": "Player SDK Error IDs",
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The unique error IDs generated by the player SDK. Customers must provide the error codes/ids at implementation time via provided error APIs."
        },
        "xdm:externalErrors": {
          "title": "External Error IDs",
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The unique error IDs from any external source, e.g., CDN errors. Customers must provide the error codes/ids at implementation time via provided error APIs."
        },
        "xdm:mediaSdkErrors": {
          "title": "Media SDK Error IDs",
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The unique error IDs generated by Media SDK during playback."
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/qoeDataDetails"
    }
  ]
}
